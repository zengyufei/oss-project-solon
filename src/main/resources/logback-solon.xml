<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 seconds">

    <contextName>logback-solon</contextName>

    <property name="ROOT_LEVEL" value="info"/>
    <property name="maxFileSize" value="50MB"/>
    <property name="saveMaxDay" value="60"/>
    <property name="queueSize" value="1024"/>

    <property name="LOG_HOME" value="/log/gdj" />

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%-25d{yyyy-MM-dd HH:mm:ss.SSS} [%thread{20}] %-5level [%X{X-TraceId}]%logger{50}:%line-->  %msg%n</pattern>
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %magenta(${PID:-}) %white(-&#45;&#45;) %-20(%yellow([%20.20thread])) %-55(%cyan(%.32logger{30}:%L)) %msg%n</pattern>-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 文件输出 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/run.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%-25d{yyyy-MM-dd HH:mm:ss.SSS} [%thread{20}] %-5level [%X{X-TraceId}]%logger{50}:%line-->  %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 配置滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志名称的格式：LOG_HOME/年_月/年_月_日/年_月_日_时(索引).log -->
            <fileNamePattern>${LOG_HOME}/run.log.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- 单log文件最大大小 -->
            <maxFileSize>${maxFileSize}</maxFileSize>
            <!-- 保存的最长时间：天数 -->
            <maxHistory>${saveMaxDay}</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 文件输出-异常 -->
    <appender name="file.error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/run.error</file>
        <encoder>
            <pattern>%-25d{yyyy-MM-dd HH:mm:ss.SSS} [%thread{20}] %-5level [%X{X-TraceId}]%logger{50}:%line-->  %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/run.error.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- 单log文件最大大小 -->
            <maxFileSize>${maxFileSize}</maxFileSize>
            <!-- 保存的最长时间：天数 -->
            <maxHistory>${saveMaxDay}</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 异步输出 -->
    <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="console"/>
        <!-- 设置队列入队时非阻塞，当队列满时会直接丢弃日志，但是对性能提升极大 -->
        <neverBlock>true</neverBlock>
        <includeCallerData>true</includeCallerData>
    </appender>
    <!-- 异步输出 -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="file"/>
        <!-- 设置队列入队时非阻塞，当队列满时会直接丢弃日志，但是对性能提升极大 -->
        <neverBlock>true</neverBlock>
        <includeCallerData>true</includeCallerData>
    </appender>
    <!-- 异步输出 -->
    <appender name="ASYNC_ERROR_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="file.error"/>
        <!-- 设置队列入队时非阻塞，当队列满时会直接丢弃日志，但是对性能提升极大 -->
        <neverBlock>true</neverBlock>
        <includeCallerData>true</includeCallerData>
    </appender>

<!--    <logger name="org.apache.ibatis" level="DEBUG"/>-->
    <logger name="org.smartboot.http.server.impl.HttpMessageProcessor" level="ERROR"/>
    <logger name="com.zaxxer.hikari.pool.HikariPool" level="INFO"/>
    <logger name="com.zaxxer.hikari.pool.PoolBase" level="INFO"/>

    <root level="${ROOT_LEVEL}">
        <appender-ref ref="ASYNC_STDOUT"/>
        <appender-ref ref="ASYNC_FILE" />
        <appender-ref ref="ASYNC_ERROR_FILE"/>
    </root>
</configuration>
